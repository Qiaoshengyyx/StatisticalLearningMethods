---
permalink: /_posts/chapter2.html
layout: default
---
# 感知机
## 简介
感知机是一个**二分类**的**线性分类模型**，输出取+1和-1二值，属于**判别模型**。

## 感知机模型 
设输入x是n维的向量，有函数：
$$
f(x)=sign(w \cdot x+b)
$$
其中：
$$
sign(x)=\left\{
    \begin{aligned}
    +1,& \ \ x\geq 0 \\
    -1,& \ \ x\lt 0 \\
    \end{aligned}
\right.
$$

将$w \cdot x+b=0$理解为一个超平面，用它来分离点。

## 损失函数
点$x_0$到上述超平面的距离为$\frac{1}{||w||}(w\cdot x_0 + b)$ 。
当一个点$x_i$ 被误分类时，设真实类别$\hat y_i$，预测类别$y_i$, 则有：$-y_i(w\cdot x_i + b) > 0$。
该点到超平面的距离为：$-\frac{1}{||w||}y_i(w\cdot x_i + b)$。（这样就拿掉了绝对值）
用**误分类点到超平面到距离总和**作为损失函数，M为误分类点集合，得到的损失函数如下：
$$
L(w,b) = -\sum_{x_i \in M}y_i(w\cdot x_i +b)
$$
上式不考虑$\frac{1}{||w||}$。

## 学习算法
### 感知机算法的原始形式
根据损失函数，目标就是最小化损失函数，使用随机梯度下降法，不断极小化目标函数。其中，极小化过程是**每次随机选取一个误分类点使其梯度下降**。
计算偏导数：
$$
\nabla_wL(w,b)=-\sum_{x_i\in M}y_ix_i \\
\nabla_bL(w,b)=-\sum_{x_i\in M}y_i
$$
则更新$w$和$b$的公式为：
$$
w \leftarrow w+\eta y_ix_i\\
b \leftarrow b+\eta y_i
$$
其中$0 \lt \eta \le 1$

该算法直观上可理解为每遇到一个误分类点，调整w、b的值，使得超平面往误分类点一侧移动，这样距离就变小了。当超平面越过误分类点，该点就被正确分类了。

> 写代码的时候注意到当$w\cdot x+b =0$的时候，$sign(w\cdot x+b)=0$，此时点在超平面上所以也是分类错误的点？因为无法分类？

### 学习算法的收敛性证明
当训练集线性可分时，感知机学习算法原始形式迭代是收敛的，且存在多解答，对分离超平面增加约束条件可以得到唯一超平面。

## 感知机算法的对偶形式
当假设w和b当初始值为全0向量和0的时候，根据w和b更新的公式，可以将它们记为：
$$
w=\sum_{i=1}^{N}\alpha_iy_ix_i  \\
b=\sum_{i=1}^{N}\alpha_iy_i
$$
其中$\alpha_i \ge 0$，当$\eta = 1$的时候，$\alpha_i$表示第i个样本由于误分类而进行更新的次数。

那么感知机模型可以写作：
$$
f(x) = sign(\sum_{j=1}^{N}\alpha_jy_jx_h+b)
$$
如果$y_j(\sum_{j=1}^{N}\alpha_jy_jx_h+b) \le 0$,则进行更新，
$$
\alpha_i \leftarrow \alpha_i+\eta \\
b \leftarrow b + \eta y_i
$$
预先将训练集中实例间第内积计算出来，即计算**Gram矩阵**：
$$
G = [x_i \cdot x_j]_{N\times N}
$$

## 习题
没有与他人验证过的习题自我解答
**2.1**
反证法：假设有平面$w_1*x_1+w_2*x_2+b = 0$能表示异或，那么根据sign函数以及标签y，设数据集为
$$
x_1: [0,0] \ \ \  y_1: -1 \\
x_2: [0,1] \ \ \  y_2: +1 \\
x_3: [1,0] \ \ \  y_3: +1 \\
x_4: [1,1] \ \ \  y_4: -1
$$
则有不等式组：
> 只有markdown preview enhanced插件支持align才能公式自动编号

$$
\begin{align}
b  &< 0 \\
w_2+b  &> 0 \\
w_1+b  &> 0 \\ 
w_1+w_2+b  &< 0 \\
\end{align}
$$
根据不等式(4)有：
$$
w_1+b+w_2+b < b 
$$
根据不等式(1)，得到：
$$
w_1+b+w_2+b < 0
$$
结合不等式(2)和(3)，有:
$$
w_1+b+w_2+b > 0
$$
矛盾，因此感知机不能表示异或。

**2.2**
写了个[代码](./chapter2.py)

**2.3**
不会，我现在不会